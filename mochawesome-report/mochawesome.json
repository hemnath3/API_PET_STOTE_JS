{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-23T05:22:30.361Z",
    "end": "2021-03-23T05:22:35.055Z",
    "duration": 4694,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9d645ad6-669b-4795-b464-620dea5977bf",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dcfc8108-05f5-410c-a9c7-af8594a19054",
          "title": "Pet Store API Testing",
          "fullFile": "C:\\Users\\Admin.SivashankaranH\\petStore_APIAutomation\\test\\petStoreAPI.js",
          "file": "\\test\\petStoreAPI.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Post Request-Add a pet to the store",
              "fullTitle": "Pet Store API Testing Post Request-Add a pet to the store",
              "timedOut": false,
              "duration": 1170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomNo = Math.floor(Math.random() * 123456);\nanimalData.id = randomNo;\nconst response = await request(helper.url)\n  .post(\"/pet\")\n  .set(\"Content-Type\", \"application/json\")\n  .send(animalData);\nglobal.AnimalId = response.body.id;\nexpect(200);\nexpect(response.body).to.not.be.empty;\nexpect(response.body.id).to.be.eq(animalData.id);\nexpect(response.body.name).to.be.eq(animalData.name);\nexpect(response.body.status).to.be.eq(animalData.status);\nconsole.log(\n  \"The animal(Id: \" +\n    animalData.id +\n    \") added to the store is : \" +\n    animalData.name\n);",
              "err": {},
              "uuid": "f2304a65-4fac-45dc-84d5-34dbcb1b2275",
              "parentUUID": "dcfc8108-05f5-410c-a9c7-af8594a19054",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET Request-Get a pet from the store",
              "fullTitle": "Pet Store API Testing GET Request-Get a pet from the store",
              "timedOut": false,
              "duration": 870,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(helper.url).get(\"/\" + global.AnimalId);\nexpect(200);\nconsole.log(\n  \"The animal(Id: \" + animalData.id + \") is available in the store\"\n);",
              "err": {},
              "uuid": "dfbff3a8-ff33-4258-b228-db163f609e1d",
              "parentUUID": "dcfc8108-05f5-410c-a9c7-af8594a19054",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT Request-Update a pet in the store",
              "fullTitle": "Pet Store API Testing PUT Request-Update a pet in the store",
              "timedOut": false,
              "duration": 870,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "animalData.name = \"Moonfish\";\nconst response = await request(helper.url)\n  .put(\"/pet\")\n  .send(animalData);\nexpect(200);\nexpect(response.body).to.not.be.empty;\nexpect(response.body.id).to.be.eq(animalData.id);\nexpect(response.body.name).to.be.eq(animalData.name);\nexpect(response.body.status).to.be.eq(animalData.status);\nconsole.log(\n  \"The name of the animal(Id: \" +\n    animalData.id +\n    \") is updated to : \" +\n    animalData.name\n);",
              "err": {},
              "uuid": "f9cbbe68-447e-49bb-a4c6-a95c326f2450",
              "parentUUID": "dcfc8108-05f5-410c-a9c7-af8594a19054",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Request-Delete a pet from the store",
              "fullTitle": "Pet Store API Testing Delete Request-Delete a pet from the store",
              "timedOut": false,
              "duration": 873,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(helper.url).delete(\"/\" + global.AnimalId);\nexpect(200);\nconsole.log(\n  \"The animal(Id: \" + animalData.id + \") is now deleted from the store\"\n);",
              "err": {},
              "uuid": "e817d292-6cd1-4988-87eb-1533f0cf2938",
              "parentUUID": "dcfc8108-05f5-410c-a9c7-af8594a19054",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Negative Test-GET Request-Pass a deleted Id",
              "fullTitle": "Pet Store API Testing Negative Test-GET Request-Pass a deleted Id",
              "timedOut": false,
              "duration": 896,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(helper.url)\n  .get(\"/\" + global.AnimalId)\n  .expect(404);\nconsole.log(\"The animal(Id: \" + animalData.id + \") is not found\");",
              "err": {},
              "uuid": "e581beb0-6cda-4944-b68b-c119a678754e",
              "parentUUID": "dcfc8108-05f5-410c-a9c7-af8594a19054",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2304a65-4fac-45dc-84d5-34dbcb1b2275",
            "dfbff3a8-ff33-4258-b228-db163f609e1d",
            "f9cbbe68-447e-49bb-a4c6-a95c326f2450",
            "e817d292-6cd1-4988-87eb-1533f0cf2938",
            "e581beb0-6cda-4944-b68b-c119a678754e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4679,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}